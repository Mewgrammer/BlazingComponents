@using System
@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Components
@using System.Globalization;


@typeparam T
@inherits BlazorEssentials.ComponentLib.Areas.Components.BlazorTreeBase<T>
@if (Nodes != null && Nodes.Any())
{
    <ul class="list-group-flush">
        @foreach (var node in Nodes)
        {
        <li class="list-group-item">
            @if (node.Children.Any())
            {
                <span onclick="@( (e) => OnExpandClick(e,node))">
                    <i class="@GetIconClass(node)" onclick="@((e) => OnExpandClick(e, node))"></i>
                    @node.Text
                </span>
            }
            else
            {
                <span onclick="@( (e) => OnNodeClick(e,node))">
                    @node.Text (@node.IsSelected)
                </span>
            }
            @if (node.IsExpanded)
            {
                <BlazorTree Nodes="@node.Children"
                        OnSelect="@OnSelect"
                        OnCollapse="@OnCollapse"
                        OnExpand="@OnExpand">
                </BlazorTree>
            }
        </li>
        }
    </ul>
}

