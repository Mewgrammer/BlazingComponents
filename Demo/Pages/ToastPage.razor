@page "/toast"
@using Sotsera.Blazor.Toaster.Core.Models
@inject Sotsera.Blazor.Toaster.IToaster toaster

<h3>Data</h3>
<div class="form-row mb-3">
    <div class="form-group col-4">
        <label for="title">Title</label>
        <input id="title" class="form-control" bind="@_title" />
    </div>
    <div class="form-group col-6">
        <label for="message">Message</label>
        <input id="message" class="form-control" bind="@_message" />
    </div>
</div>


<div class="form-row">
    <h3>Actions</h3>
    <div class="form-group pl-3">
        <button class="btn btn-primary" onclick="@(() => Show(ToastType.Info))">Info</button>
        <button class="btn btn-success" onclick="@(() => Show(ToastType.Success))">Success</button>
        <button class="btn btn-warning" onclick="@(() => Show(ToastType.Warning))">Warning</button>
        <button class="btn btn-danger" onclick="@(() => Show(ToastType.Error))">Error</button>
    </div>
</div>

<div class="form-row mt-3 configuration">
    <div class="col-4">
        <div class="form-group">
            <h5>General options</h5>
        </div>
        <div class="form-group row">
            <label for="position" class="col-sm-6 col-form-label">Position</label>
            <div class="col-sm-5">
                <select id="position" class="form-control form-control-sm" bind="@toaster.Configuration.PositionClass">
                    <option value="toast-top-left">Top left</option>
                    <option value="toast-top-center">Top center</option>
                    <option value="toast-top-right">Top right</option>
                    <option value="toast-top-full-width">Top full width</option>
                    <option value="toast-bottom-right">Bottom right</option>
                    <option value="toast-bottom-center">Bottom center</option>
                    <option value="toast-bottom-left">Bottom left</option>
                    <option value="toast-bottom-full-width">Bottom full width</option>
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label for="maxDisplayedToasts" class="col-sm-6 col-form-label">Max visible toasts</label>
            <div class="col-sm-5">
                <input type="number" class="form-control form-control-sm" id="maxDisplayedToasts" bind="@toaster.Configuration.MaxDisplayedToasts" />
            </div>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="NewestOnTop" bind="@toaster.Configuration.NewestOnTop" />
            <label class="form-check-label" for="NewestOnTop">
                Newest on top
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="PreventDuplicates" bind="@toaster.Configuration.PreventDuplicates" />
            <label class="form-check-label" for="PreventDuplicates">
                Prevent duplicates
            </label>
        </div>
    </div>
    <div class="col-4">
        <h5>Toast options</h5>
        <div class="form-group row">
            <label for="maximumOpacity" class="col-sm-7 col-form-label">Max opacity (%)</label>
            <div class="col-sm-4">
                <input type="number" class="form-control form-control-sm" id="maximumOpacity" bind="@_maximumOpacity" />
            </div>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="requireInteraction" bind="@_requireInteraction" />
            <label class="form-check-label" for="requireInteraction">
                Require interaction
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="showProgressbar" bind="@_showProgressBar" />
            <label class="form-check-label" for="showProgressbar">
                Progress bar
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="showCloseIcon" bind="@_showCloseIcon" />
            <label class="form-check-label" for="showCloseIcon">
                Close icon
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="actionOnClick" bind="@_actionOnClick" />
            <label class="form-check-label" for="actionOnClick">
                Action on click (message in console)
            </label>
        </div>
    </div>
    <div class="col-4">
        <h5>Toast transitions</h5>
        <div class="form-group row">
            <label for="showTransitionDuration" class="col-sm-7 col-form-label">Show duration</label>
            <div class="col-sm-4">
                <input type="number" class="form-control form-control-sm" id="showTransitionDuration" bind="@_showTransitionDuration" />
            </div>
        </div>
        <div class="form-group row">
            <label for="visibleStateDuration" class="col-sm-7 col-form-label">Visible duration</label>
            <div class="col-sm-4">
                <input type="number" class="form-control form-control-sm" id="visibleStateDuration" bind="@_visibleStateDuration" />
            </div>
        </div>
        <div class="form-group row">
            <label for="hideTransitionDuration" class="col-sm-7 col-form-label">Hide duration</label>
            <div class="col-sm-4">
                <input type="number" class="form-control form-control-sm" id="hideTransitionDuration" bind="@_hideTransitionDuration" />
            </div>
        </div>
    </div>
</div>
@functions {
    private string _title = "Test Title";
    private string _message = "Test Message";
    private bool _showProgressBar;
    private bool _showCloseIcon;
    private bool _actionOnClick;
    private int _maximumOpacity;

    private int _showTransitionDuration;
    private int _visibleStateDuration;
    private int _hideTransitionDuration;

    private bool _requireInteraction;

    protected override void OnInit()
    {
        _showProgressBar = toaster.Configuration.ShowProgressBar;
        _showCloseIcon = toaster.Configuration.ShowCloseIcon;
        _maximumOpacity = toaster.Configuration.MaximumOpacity;

        _showTransitionDuration = toaster.Configuration.ShowTransitionDuration;
        _visibleStateDuration = toaster.Configuration.VisibleStateDuration;
        _hideTransitionDuration = toaster.Configuration.HideTransitionDuration;

        _requireInteraction = toaster.Configuration.RequireInteraction;
    }

    public void Show(ToastType type)
    {
        toaster.Add(type, _message, _title, config =>
        {
            config.ShowCloseIcon = _showCloseIcon;
            config.ShowProgressBar = _showProgressBar;
            config.MaximumOpacity = _maximumOpacity;

            config.ShowTransitionDuration = _showTransitionDuration;
            config.VisibleStateDuration = _visibleStateDuration;
            config.HideTransitionDuration = _hideTransitionDuration;

            config.RequireInteraction = _requireInteraction;

            if (_actionOnClick)
            {
                config.Onclick = toast =>
                {
                    Console.WriteLine($"Title: \"{toast.Title}\"; message: \"{toast.Message}\"; Type: {toast.Options.Type}");
                    return Task.CompletedTask;
                };
            }
        });
    }
}