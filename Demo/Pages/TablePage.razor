@page "/table"
@using System
@using System.Collections.Generic
@using System.Linq
@using BlazingComponents.Lib.Areas.Components
@using BlazingComponents.Demo.Models

    <div>
        <h3>
            Autotable with selectable rows using generic data source. columns and rows generated using Reflection on Data Source
        </h3>
        <label>
            Data Source
            <select @bind="@SelectedDataSource" class="form-control">
                <option value="Persons" selected>Persons</option>
                <option value="Cars">Cars</option>
            </select>
        </label>
        @if (SelectedDataSource == "Persons")
        {
            <AutoTable Items="Persons" Selectable="true" MultiSelect="false">
                <ExpandedRowTemplate Context="person">
                    <td colspan="999">
                        @($"{person?.FirstName} {person.LastName} born on {person?.BirthDate}")
                    </td>
                </ExpandedRowTemplate>
            </AutoTable>
        }
        else if (SelectedDataSource == "Cars")
        {
            <AutoTable Items="Cars" Selectable="true" MultiSelect="false" Expandable="true" MultiExpand="true">
                <ExpandedRowTemplate Context="car">
                    <td colspan="@(car.GetType().GetProperties().Count())">
                        @($"A {car?.Manufacturer} {car?.Model} with {car?.Horsepower} PS and a fuel consumption of {car?.FuelConsumption} l/100km priced at {car?.Price}€")
                    </td>
                </ExpandedRowTemplate>
            </AutoTable>
        }
    </div>
<div>
    <h3>
        expandable & selectable table with generic Data source. Row, Header and Footer Templates using RenderFragments
    </h3>
    <BlazorTable @ref="_tableComponent" Items="Persons" UsePagination="true" Expandable="_tableExpandable" Selectable="_tableSelectable" MultiSelect="_tableMultiSelect" MultiExpand="_tableMultiExpand">
        <TableHeader>
            <th></th>
            <th>ID</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>BirthDate</th>
        </TableHeader>
        <RowTemplate Context="person">
            <td><button class="btn btn-sm btn-light" @onclick="@(() => _tableComponent?.ExpandItem(person))">Expand</button></td>
            <td>@person.Id</td>
            <td>@person.FirstName</td>
            <td>@person.LastName</td>
            <td>@person.BirthDate</td>
        </RowTemplate>
        <ExpandedRowTemplate Context="person">
            <td colspan="6">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ToString</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                @person
                            </td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </ExpandedRowTemplate>
    </BlazorTable>

    <div class="row">
        <div class="custom-control custom-switch ml-5">
            <input class="custom-control-input" id="check-option-1" type="checkbox" @bind="@_tableSelectable" />
            <label class="custom-control-label" for="check-option-1">
                Selectable
            </label>
        </div>
        <div class="custom-control custom-switch ml-5">
            <input class="custom-control-input" id="check-option-2" type="checkbox" @bind="@_tableExpandable" />
            <label class="custom-control-label" for="check-option-2">
                Expandable
            </label>
        </div>
        <div class="custom-control custom-switch ml-5">
            <input class="custom-control-input" id="check-option-3" type="checkbox" @bind="@_tableMultiSelect" />
            <label class="custom-control-label" for="check-option-3">
                Multi-Select
            </label>
        </div>
        <div class="custom-control custom-switch ml-5">
            <input class="custom-control-input" id="check-option-4" type="checkbox" @bind="@_tableMultiExpand" />
            <label class="custom-control-label" for="check-option-4">
                Multi-Expand
            </label>
        </div>
    </div>
    <div class="row">
        <button class="btn btn-primary" @onclick="@( () => _tableComponent?.SelectAll())"> Select all </button>
        <button class="btn btn-secondary ml-2" @onclick="@( () => _tableComponent?.DeselectAll())"> Deselect all </button>
        <button class="btn btn-primary ml-2" @onclick="@( () => _tableComponent?.ExpandAll())"> Expand all </button>
        <button class="btn btn-secondary ml-2" @onclick="@( () => _tableComponent?.CollapseAll())"> Collapse all </button>
    </div>
    <div class="row">
        <div class="col">
            @if (_tableComponent?.SelectedItems.Any() ?? false)
            {
            <div class="row">
                <h5>Selected Persons</h5>
            </div>
            <ul class="list-group">
                @foreach (var selectedItem in _tableComponent?.SelectedItems)
                    {
                <li class="list-group-item">@selectedItem</li>
                    }
            </ul>

            }
        </div>
        <div class="col">
            @if (_tableComponent?.ExpandedItems.Any() ?? false)
            {
            <div class="row">
                <h5>Expanded Persons</h5>
            </div>
            <ul class="list-group">
                @foreach (var expandedItem in _tableComponent?.ExpandedItems)
                    {
                <li class="list-group-item">@expandedItem</li>
                    }
            </ul>
            }
        </div>
    </div>
</div>

@code
{

    public IReadOnlyList<Person> Persons { get; private set; } = new List<Person>
    {
        new Person { Id = 1, FirstName = "Michael", LastName = "Mew", BirthDate = new DateTime(1995, 10, 6)},
        new Person { Id = 2, FirstName = "Philipp", LastName = "Schiweck", BirthDate = new DateTime(1995, 8, 26)},
        new Person { Id = 3, FirstName = "Axel", LastName = "Vogl", BirthDate = new DateTime(1997, 2, 1)},
        new Person { Id = 4, FirstName = "Alexander", LastName = "Hallaschka", BirthDate = new DateTime(1993, 1, 3)},
        new Person { Id = 5, FirstName = "Michael2", LastName = "Mew", BirthDate = new DateTime(1995, 10, 6)},
        new Person { Id = 6, FirstName = "Philipp2", LastName = "Schiweck", BirthDate = new DateTime(1995, 8, 26)},
        new Person { Id = 7, FirstName = "Axel2", LastName = "Vogl", BirthDate = new DateTime(1997, 2, 1)},
        new Person { Id = 8, FirstName = "Alexander2", LastName = "Hallaschka", BirthDate = new DateTime(1993, 1, 3)},

    };

    public IReadOnlyList<Car> Cars { get; private set; } = new List<Car>
{
        new Car { Model = "A-Class", Manufacturer = "Mercedes-Benz", FuelConsumption = 6.7f, Horsepower = 163, Price = 52000},
        new Car { Model = "ForFour", Manufacturer = "Smart", FuelConsumption = 5.5f, Horsepower = 90, Price = 18000},
        new Car { Model = "C-Zero", Manufacturer = "Citroen", FuelConsumption = 0, Horsepower = 68, Price = 13000},
        new Car { Model = "Tuk Tuk", Manufacturer = "Shithole GmbH", FuelConsumption = 90, Horsepower = 2, Price = 500},
        new Car { Model = "e-tron", Manufacturer = "Audi", FuelConsumption = 0, Horsepower = 380, Price = 88000},

    };

    public string SelectedDataSource = "Persons";


    private BlazorTableBase<Person> _tableComponent;
    private Person ButtonClickedPerson { get; set; }
    private bool _tableRendered;


    private bool _tableSelectable = true;
    private bool _tableExpandable = true;

    private bool _tableMultiSelect;
    private bool _tableMultiExpand;


    protected override void OnAfterRender()
    {
        _tableRendered = true;
        _tableComponent.OnItemExpanded += OnTablePersonExpanded;
        _tableComponent.OnItemSelected += OnTablePersonSelected;
    }

    private void OnTablePersonSelected(Person person)
    {
        Console.WriteLine($"Item Selected: {person.Id}");
        this.StateHasChanged();
    }

    private void OnTablePersonExpanded(Person person)
    {
        Console.WriteLine($"Item expanded: {person.Id}");
        this.StateHasChanged();
    }
}